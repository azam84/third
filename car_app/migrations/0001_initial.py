# Generated by Django 3.1.3 on 2020-12-06 05:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BanType',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('ban_type', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'ban_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BantypeFueltype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marka', models.SmallIntegerField(blank=True, null=True)),
                ('model', models.SmallIntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('engine', models.IntegerField(blank=True, null=True)),
                ('gearbox', models.SmallIntegerField(blank=True, null=True)),
                ('transmission', models.SmallIntegerField(blank=True, null=True)),
                ('ban_type', models.SmallIntegerField(blank=True, null=True)),
                ('fuel_type_id', models.SmallIntegerField(blank=True, null=True)),
                ('fuel_type', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'bantype_fueltype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('price', models.IntegerField(blank=True, null=True)),
                ('unique_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('year', models.SmallIntegerField(blank=True, null=True)),
                ('engine', models.CharField(blank=True, max_length=5, null=True)),
                ('used_by_km', models.IntegerField(blank=True, null=True)),
                ('engine_power', models.SmallIntegerField(blank=True, null=True)),
                ('transmission', models.SmallIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('loan', models.SmallIntegerField(blank=True, null=True)),
                ('barter', models.SmallIntegerField(blank=True, null=True)),
                ('view_count', models.IntegerField(blank=True, null=True)),
                ('new', models.SmallIntegerField(blank=True, null=True)),
                ('is_indexed', models.SmallIntegerField(blank=True, null=True)),
                ('is_parsed', models.SmallIntegerField(blank=True, null=True)),
                ('request_count', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'car',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CarModified',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('marka', models.SmallIntegerField(blank=True, null=True)),
                ('model', models.SmallIntegerField(blank=True, null=True)),
                ('price', models.IntegerField(blank=True, null=True)),
                ('currency', models.SmallIntegerField(blank=True, null=True)),
                ('unique_id', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('city', models.SmallIntegerField(blank=True, null=True)),
                ('engine', models.IntegerField(blank=True, null=True)),
                ('fuel_type', models.SmallIntegerField(blank=True, null=True)),
                ('ban_type', models.SmallIntegerField(blank=True, null=True)),
                ('color', models.SmallIntegerField(blank=True, null=True)),
                ('used_by_km', models.IntegerField(blank=True, null=True)),
                ('engine_power', models.SmallIntegerField(blank=True, null=True)),
                ('transmission', models.SmallIntegerField(blank=True, null=True)),
                ('gearbox', models.SmallIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('loan', models.SmallIntegerField(blank=True, null=True)),
                ('barter', models.SmallIntegerField(blank=True, null=True)),
                ('view_count', models.IntegerField(blank=True, null=True)),
                ('new', models.SmallIntegerField(blank=True, null=True)),
                ('is_indexed', models.SmallIntegerField(blank=True, null=True)),
                ('is_parsed', models.SmallIntegerField(blank=True, null=True)),
                ('request_count', models.SmallIntegerField(blank=True, null=True)),
                ('seller', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'car_modified',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CascadedCar',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('marka', models.SmallIntegerField(blank=True, null=True)),
                ('model', models.SmallIntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('engine', models.IntegerField(blank=True, null=True)),
                ('gearbox', models.SmallIntegerField(blank=True, null=True)),
                ('transmission', models.SmallIntegerField(blank=True, null=True)),
                ('ban_type', models.SmallIntegerField(blank=True, null=True)),
                ('fuel_type', models.SmallIntegerField(blank=True, null=True)),
                ('used_by_km', models.IntegerField(blank=True, null=True)),
                ('price', models.IntegerField(blank=True, null=True)),
                ('currency', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cascaded_car',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('color', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'color',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('currency', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'currency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Details',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Engine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engine', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'engine',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EngineGearbox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marka', models.SmallIntegerField(blank=True, null=True)),
                ('model', models.SmallIntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('engine', models.IntegerField(blank=True, null=True)),
                ('gearbox_id', models.SmallIntegerField(blank=True, null=True)),
                ('gearbox', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'engine_gearbox',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FuelType',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('fuel_type', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'fuel_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gearbox',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('gearbox', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'gearbox',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GearboxTransmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marka', models.SmallIntegerField(blank=True, null=True)),
                ('model', models.SmallIntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('engine', models.IntegerField(blank=True, null=True)),
                ('gearbox', models.SmallIntegerField(blank=True, null=True)),
                ('transmission_id', models.SmallIntegerField(blank=True, null=True)),
                ('transmission', models.CharField(blank=True, max_length=6, null=True)),
            ],
            options={
                'db_table': 'gearbox_transmission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('url', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('is_main', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'images',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keywords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'keywords',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('link', models.CharField(blank=True, max_length=100, null=True)),
                ('exception_info', models.TextField(blank=True, null=True)),
                ('traceback_info', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Marka',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('marka', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'marka',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MarkaModel',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('marka', models.IntegerField(blank=True, null=True)),
                ('model_id', models.SmallIntegerField(blank=True, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'marka_model',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'model',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModelYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marka', models.SmallIntegerField(blank=True, null=True)),
                ('model', models.SmallIntegerField(blank=True, null=True)),
                ('year_id', models.IntegerField(blank=True, null=True)),
                ('year', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'model_year',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'phone_number',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Requirements',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('min_year', models.SmallIntegerField(blank=True, null=True)),
                ('max_year', models.SmallIntegerField(blank=True, null=True)),
                ('min_price', models.IntegerField(blank=True, null=True)),
                ('max_price', models.IntegerField(blank=True, null=True)),
                ('engine', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'requirements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequirementsBanType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'requirements_ban_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequirementsDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'requirements_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequirementsFuelType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'requirements_fuel_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequirementsGearbox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'requirements_gearbox',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequirementsKeywords',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'requirements_keywords',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('seller', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'seller',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transmission',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('transmission', models.CharField(blank=True, max_length=6, null=True)),
            ],
            options={
                'db_table': 'transmission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TransmissionBantype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marka', models.SmallIntegerField(blank=True, null=True)),
                ('model', models.SmallIntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('engine', models.IntegerField(blank=True, null=True)),
                ('gearbox', models.SmallIntegerField(blank=True, null=True)),
                ('transmission', models.SmallIntegerField(blank=True, null=True)),
                ('ban_type_id', models.SmallIntegerField(blank=True, null=True)),
                ('ban_type', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'transmission_bantype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UniqueDetails',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('unique_details', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'unique_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UniquePhoneNumber',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('unique_phone_number', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'unique_phone_number',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'year',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YearEngine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marka', models.SmallIntegerField(blank=True, null=True)),
                ('model', models.SmallIntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('engine_id', models.IntegerField(blank=True, null=True)),
                ('engine', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'year_engine',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='car_information',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('used_by_km', models.IntegerField(blank=True, null=True)),
                ('ban_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='car_app.transmissionbantype')),
                ('engine', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='car_app.yearengine')),
                ('fuel_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='car_app.bantypefueltype')),
                ('gearbox', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='car_app.enginegearbox')),
                ('marka', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='car_app.marka')),
                ('model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='car_app.markamodel')),
                ('transmission', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='car_app.gearboxtransmission')),
                ('year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='car_app.modelyear')),
            ],
        ),
        migrations.CreateModel(
            name='car_information_details',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('alloy_wheels', models.SmallIntegerField(choices=[(0, '18'), (1, '16'), (2, 'yox')], null=True)),
                ('luke', models.SmallIntegerField(choices=[(0, 'Var'), (1, 'Yox')], null=True)),
                ('leather_salon', models.SmallIntegerField(choices=[(0, 'Var'), (1, 'Yox')], null=True)),
                ('start_stop', models.SmallIntegerField(choices=[(0, 'Var'), (1, 'Yox')], null=True)),
                ('monitor', models.SmallIntegerField(choices=[(0, 'Var'), (1, 'Yox')], null=True)),
                ('front_bumper', models.SmallIntegerField(choices=[(0, 'Dəyişdirilib'), (1, 'Rəng'), (2, 'Qəzasız')], null=True)),
                ('front_hood', models.SmallIntegerField(choices=[(0, 'Dəyişdirilib'), (1, 'Rəng'), (2, 'Qəzasız')], null=True)),
                ('front_right_corner', models.SmallIntegerField(choices=[(0, 'Dəyişdirilib'), (1, 'Rəng'), (2, 'Qəzasız')], null=True)),
                ('front_left_corner', models.SmallIntegerField(choices=[(0, 'Dəyişdirilib'), (1, 'Rəng'), (2, 'Qəzasız')], null=True)),
                ('front_right_door', models.SmallIntegerField(choices=[(0, 'Dəyişdirilib'), (1, 'Rəng'), (2, 'Qəzasız')], null=True)),
                ('front_left_door', models.SmallIntegerField(choices=[(0, 'Dəyişdirilib'), (1, 'Rəng'), (2, 'Qəzasız')], null=True)),
                ('dam', models.SmallIntegerField(choices=[(0, 'Dəyişdirilib'), (1, 'Rəng'), (2, 'Qəzasız')], null=True)),
                ('back_left_door', models.SmallIntegerField(choices=[(0, 'Dəyişdirilib'), (1, 'Rəng'), (2, 'Qəzasız')], null=True)),
                ('back_right_door', models.SmallIntegerField(choices=[(0, 'Dəyişdirilib'), (1, 'Rəng'), (2, 'Qəzasız')], null=True)),
                ('back_right_corner', models.SmallIntegerField(choices=[(0, 'Dəyişdirilib'), (1, 'Rəng'), (2, 'Qəzasız')], null=True)),
                ('back_left_corner', models.SmallIntegerField(choices=[(0, 'Dəyişdirilib'), (1, 'Rəng'), (2, 'Qəzasız')], null=True)),
                ('begaj', models.SmallIntegerField(choices=[(0, 'Dəyişdirilib'), (1, 'Rəng'), (2, 'Qəzasız')], null=True)),
                ('back_bumper', models.SmallIntegerField(choices=[(0, 'Dəyişdirilib'), (1, 'Rəng'), (2, 'Qəzasız')], null=True)),
                ('right_pole', models.SmallIntegerField(choices=[(0, 'Dəyişdirilib'), (1, 'Rəng'), (2, 'Qəzasız')], null=True)),
                ('left_pole', models.SmallIntegerField(choices=[(0, 'Dəyişdirilib'), (1, 'Rəng'), (2, 'Qəzasız')], null=True)),
                ('color', models.SmallIntegerField(choices=[(0, 'Gümüşü'), (1, 'Boz'), (2, 'Yaş Asfalt'), (3, 'Göy'), (4, 'Tünd qırmızı'), (5, 'Qara'), (6, 'Ağ')], null=True)),
                ('car_information', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='car_app.car_information')),
            ],
        ),
    ]
